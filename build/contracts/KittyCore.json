{
  "contractName": "KittyCore",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_preferredTransport",
          "type": "string"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "name": "infoUrl",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "promoCreatedCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_STARTING_PRICE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setSiringAuctionAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pregnantKitties",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "isPregnant",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_AUCTION_DURATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "siringAuction",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setGeneScienceAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCOO",
          "type": "address"
        }
      ],
      "name": "setCOO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kittyId",
          "type": "uint256"
        },
        {
          "name": "_startingPrice",
          "type": "uint256"
        },
        {
          "name": "_endingPrice",
          "type": "uint256"
        },
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "createSaleAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sireAllowedToAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_matronId",
          "type": "uint256"
        },
        {
          "name": "_sireId",
          "type": "uint256"
        }
      ],
      "name": "canBreedWith",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "kittyIndexToApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kittyId",
          "type": "uint256"
        },
        {
          "name": "_startingPrice",
          "type": "uint256"
        },
        {
          "name": "_endingPrice",
          "type": "uint256"
        },
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "createSiringAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "setAutoBirthFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        },
        {
          "name": "_sireId",
          "type": "uint256"
        }
      ],
      "name": "approveSiring",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCFO",
          "type": "address"
        }
      ],
      "name": "setCFO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_genes",
          "type": "uint256"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "createPromoKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "secs",
          "type": "uint256"
        }
      ],
      "name": "setSecondsPerBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_CREATION_LIMIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newContractAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setSaleAuctionAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "secondsPerBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "name": "ownerTokens",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_matronId",
          "type": "uint256"
        }
      ],
      "name": "giveBirth",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAuctionBalances",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cooldowns",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "kittyIndexToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cooAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "autoBirthFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc721Metadata",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_genes",
          "type": "uint256"
        }
      ],
      "name": "createGen0Auction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "isReadyToBreed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PROMO_CREATION_LIMIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setMetadataAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "saleAuction",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_sireId",
          "type": "uint256"
        },
        {
          "name": "_matronId",
          "type": "uint256"
        }
      ],
      "name": "bidOnSiringAuction",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gen0CreatedCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "geneScience",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_matronId",
          "type": "uint256"
        },
        {
          "name": "_sireId",
          "type": "uint256"
        }
      ],
      "name": "breedWithAuto",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "matronId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sireId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "cooldownEndBlock",
          "type": "uint256"
        }
      ],
      "name": "Pregnant",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "kittyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "matronId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sireId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "genes",
          "type": "uint256"
        }
      ],
      "name": "Birth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_v2Address",
          "type": "address"
        }
      ],
      "name": "setNewAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getKitty",
      "outputs": [
        {
          "name": "isGestating",
          "type": "bool"
        },
        {
          "name": "isReady",
          "type": "bool"
        },
        {
          "name": "cooldownIndex",
          "type": "uint256"
        },
        {
          "name": "nextActionAt",
          "type": "uint256"
        },
        {
          "name": "siringWithId",
          "type": "uint256"
        },
        {
          "name": "birthTime",
          "type": "uint256"
        },
        {
          "name": "matronId",
          "type": "uint256"
        },
        {
          "name": "sireId",
          "type": "uint256"
        },
        {
          "name": "generation",
          "type": "uint256"
        },
        {
          "name": "genes",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6060604052600436106102bf576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146103755780630519ce79146103cf5780630560ff441461042457806305e45546146104d457806306fdde03146104fd578063095ea7b31461058b5780630a0f8168146105cd5780630e583df01461062257806314001f4c1461064b57806318160ddd14610684578063183a7947146106ad5780631940a936146106d657806319c2f2011461071157806321717ebf1461073a57806323b872dd1461078f57806324e7a38a146107f057806327d7874c146108295780632ba73c15146108625780633d7d3f5a1461089b5780633f4ba83a146108d957806346116e6f146108ee57806346d22c7014610951578063481af3d3146109955780634ad8c938146109f85780634b85fd5514610a365780634dfff04f14610a595780634e0a337914610a9b5780635612913414610ad45780635663896e14610b165780635c975abb14610b395780635fd8c71014610b665780636352211e14610b7b578063680eba2714610bde5780636af04a5714610c075780636fbde40d14610c5c57806370a0823114610c955780637158798814610ce25780637a7d493714610d1b5780638456cb5914610d445780638462151c14610d5957806388c2a0bf14610de757806391876e5714610e1e57806395d89b4114610e335780639d6fac6f14610ec1578063a45f4bfc14610f04578063a9059cbb14610f67578063b047fb5014610fa9578063b0c35c0514610ffe578063bc4006f514611027578063c3bea9af1461107c578063d3e6f49f1461109f578063defb9584146110da578063e17b25af14611103578063e6cbe3511461113c578063e98b7f4d14611191578063ed60ade61461120f578063f1ca941014611230578063f2b47d5214611259578063f7d8c883146112ae575b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103685750600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561037357600080fd5b005b341561038057600080fd5b6103b560048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190919050506112cf565b604051808215151515815260200191505060405180910390f35b34156103da57600080fd5b6103e26115e0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561042f57600080fd5b61045960048080359060200190919080359060200190820180359060200191909192905050611606565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561049957808201518184015260208101905061047e565b50505050905090810190601f1680156104c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156104df57600080fd5b6104e7611764565b6040518082815260200191505060405180910390f35b341561050857600080fd5b61051061176a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610550578082015181840152602081019050610535565b50505050905090810190601f16801561057d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561059657600080fd5b6105cb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506117a3565b005b34156105d857600080fd5b6105e0611881565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561062d57600080fd5b6106356118a6565b6040518082815260200191505060405180910390f35b341561065657600080fd5b610682600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118b1565b005b341561068f57600080fd5b6106976119db565b6040518082815260200191505060405180910390f35b34156106b857600080fd5b6106c06119eb565b6040518082815260200191505060405180910390f35b34156106e157600080fd5b6106f760048080359060200190919050506119f1565b604051808215151515815260200191505060405180910390f35b341561071c57600080fd5b610724611a43565b6040518082815260200191505060405180910390f35b341561074557600080fd5b61074d611a4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561079a57600080fd5b6107ee600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611a70565b005b34156107fb57600080fd5b610827600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b3d565b005b341561083457600080fd5b610860600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c67565b005b341561086d57600080fd5b610899600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611d41565b005b34156108a657600080fd5b6108d76004808035906020019091908035906020019091908035906020019091908035906020019091905050611e1c565b005b34156108e457600080fd5b6108ec611f80565b005b34156108f957600080fd5b61090f6004808035906020019091905050612177565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561095c57600080fd5b61097b60048080359060200190919080359060200190919050506121aa565b604051808215151515815260200191505060405180910390f35b34156109a057600080fd5b6109b66004808035906020019091905050612232565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610a0357600080fd5b610a346004808035906020019091908035906020019091908035906020019091908035906020019091905050612265565b005b3415610a4157600080fd5b610a5760048080359060200190919050506123c8565b005b3415610a6457600080fd5b610a99600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061242e565b005b3415610aa657600080fd5b610ad2600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506124b5565b005b3415610adf57600080fd5b610b14600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612590565b005b3415610b2157600080fd5b610b376004808035906020019091905050612685565b005b3415610b4457600080fd5b610b4c6127d9565b604051808215151515815260200191505060405180910390f35b3415610b7157600080fd5b610b796127ec565b005b3415610b8657600080fd5b610b9c60048080359060200190919050506128d8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610be957600080fd5b610bf1612951565b6040518082815260200191505060405180910390f35b3415610c1257600080fd5b610c1a612957565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610c6757600080fd5b610c93600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061297d565b005b3415610ca057600080fd5b610ccc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612aa7565b6040518082815260200191505060405180910390f35b3415610ced57600080fd5b610d19600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612af0565b005b3415610d2657600080fd5b610d2e612c0d565b6040518082815260200191505060405180910390f35b3415610d4f57600080fd5b610d57612c13565b005b3415610d6457600080fd5b610d90600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612d57565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610dd3578082015181840152602081019050610db8565b505050509050019250505060405180910390f35b3415610df257600080fd5b610e086004808035906020019091905050612e8e565b6040518082815260200191505060405180910390f35b3415610e2957600080fd5b610e316132a0565b005b3415610e3e57600080fd5b610e466134d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e86578082015181840152602081019050610e6b565b50505050905090810190601f168015610eb35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415610ecc57600080fd5b610ee26004808035906020019091905050613510565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3415610f0f57600080fd5b610f25600480803590602001909190505061353f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610f7257600080fd5b610fa7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050613572565b005b3415610fb457600080fd5b610fbc6136e3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561100957600080fd5b611011613709565b6040518082815260200191505060405180910390f35b341561103257600080fd5b61103a61370f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561108757600080fd5b61109d6004808035906020019091905050613735565b005b34156110aa57600080fd5b6110c060048080359060200190919050506138ef565b604051808215151515815260200191505060405180910390f35b34156110e557600080fd5b6110ed613a5e565b6040518082815260200191505060405180910390f35b341561110e57600080fd5b61113a600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613a64565b005b341561114757600080fd5b61114f613b03565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561119c57600080fd5b6111b26004808035906020019091905050613b29565b604051808b1515151581526020018a1515151581526020018981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390f35b61122e6004808035906020019091908035906020019091905050613c8a565b005b341561123b57600080fd5b611243613e62565b6040518082815260200191505060405180910390f35b341561126457600080fd5b61126c613e68565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6112cd6004808035906020019091908035906020019091905050613e8e565b005b600060405180807f737570706f727473496e74657266616365286279746573342900000000000000815250601901905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806115d9575060405180807f746f6b656e4d657461646174612875696e743235362c737472696e6729000000815250601d019050604051809103902060405180807f746f6b656e734f664f776e6572286164647265737329000000000000000000008152506016019050604051809103902060405180807f7472616e7366657246726f6d28616464726573732c616464726573732c75696e81526020017f74323536290000000000000000000000000000000000000000000000000000008152506025019050604051809103902060405180807f7472616e7366657228616464726573732c75696e7432353629000000000000008152506019019050604051809103902060405180807f617070726f766528616464726573732c75696e743235362900000000000000008152506018019050604051809103902060405180807f6f776e65724f662875696e7432353629000000000000000000000000000000008152506010019050604051809103902060405180807f62616c616e63654f6628616464726573732900000000000000000000000000008152506012019050604051809103902060405180807f746f74616c537570706c79282900000000000000000000000000000000000000815250600d019050604051809103902060405180807f73796d626f6c28290000000000000000000000000000000000000000000000008152506008019050604051809103902060405180807f6e616d6528290000000000000000000000000000000000000000000000000000815250600601905060405180910390201818181818181818187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61160e6150ea565b6116166150fe565b60008073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561167557600080fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cb4799f28787876040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180848152602001806020018281038252848482818152602001925080828437820191505094505050505060a060405180830381600087803b151561172757600080fd5b5af1151561173457600080fd5b50505060405180608001805190602001604052809250819350505061175982826141cf565b925050509392505050565b60115481565b6040805190810160405280600d81526020017f43727970746f4b6974746965730000000000000000000000000000000000000081525081565b600260149054906101000a900460ff161515156117bf57600080fd5b6117c93382614227565b15156117d457600080fd5b6117de8183614293565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b662386f26fc1000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561190e57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166376190f8f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561197457600080fd5b5af1151561198157600080fd5b50505060405180519050151561199657600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600160068054905003905090565b600f5481565b60008082111515611a0157600080fd5b6000600683815481101515611a1257fe5b906000526020600020906002020160010160189054906101000a900463ffffffff1663ffffffff1614159050919050565b6201518081565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff16151515611a8c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ac857600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611b0357600080fd5b611b0d33826142e9565b1515611b1857600080fd5b611b228382614227565b1515611b2d57600080fd5b611b38838383614355565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b9a57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166354c15b826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515611c0057600080fd5b5af11515611c0d57600080fd5b505050604051805190501515611c2257600080fd5b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cc257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611cfe57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d9c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611dd857600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff16151515611e3857600080fd5b611e423385614227565b1515611e4d57600080fd5b611e56846119f1565b151515611e6257600080fd5b611e8e84600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614293565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a85858585336040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b1515611f6a57600080fd5b5af11515611f7757600080fd5b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fdb57600080fd5b600260149054906101000a900460ff161515611ff657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561205457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156120b257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561211057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561216d57600080fd5b61217561458d565b565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080851115156121bd57600080fd5b6000841115156121cc57600080fd5b6006858154811015156121db57fe5b906000526020600020906002020191506006848154811015156121fa57fe5b9060005260206000209060020201905061221682868387614620565b801561222857506122278486614835565b5b9250505092915050565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1615151561228157600080fd5b61228b3385614227565b151561229657600080fd5b61229f846138ef565b15156122aa57600080fd5b6122d684600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614293565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a85858585336040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b15156123b257600080fd5b5af115156123bf57600080fd5b50505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561242457600080fd5b80600e8190555050565b600260149054906101000a900460ff1615151561244a57600080fd5b6124543382614227565b151561245f57600080fd5b81600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561251057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561254c57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156125ee57600080fd5b819050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561264c57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b61138860115410151561265e57600080fd5b60116000815480929190600101919050555061267f60008060008685614948565b50505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061272d57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806127855750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561279057600080fd5b60036000600e811015156127a057fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16811015156127cf57600080fd5b8060058190555050565b600260149054906101000a900460ff1681565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561284b57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16319150600e546001600f5401029050808211156128d457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8284039081150290604051600060405180830381858888f19350505050505b5050565b60006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561294c57600080fd5b919050565b61afc881565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156129da57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166385b861886040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515612a4057600080fd5b5af11515612a4d57600080fd5b505050604051805190501515612a6257600080fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612b4b57600080fd5b600260149054906101000a900460ff161515612b6657600080fd5b80601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612cbb57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80612d135750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515612d1e57600080fd5b600260149054906101000a900460ff16151515612d3a57600080fd5b6001600260146101000a81548160ff021916908315150217905550565b612d5f615129565b6000612d69615129565b6000806000612d7787612aa7565b94506000851415612da9576000604051805910612d915750595b90808252806020026020018201604052509550612e84565b84604051805910612db75750595b90808252806020026020018201604052509350612dd26119db565b925060009150600190505b8281111515612e80578673ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612e7357808483815181101515612e5c57fe5b906020019060200201818152505081806001019250505b8080600101915050612ddd565b8395505b5050505050919050565b600080600080600080600080600260149054906101000a900460ff16151515612eb657600080fd5b600689815481101515612ec557fe5b9060005260206000209060020201965060008760010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614151515612f0757600080fd5b61303d876101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050614c3b565b151561304857600080fd5b8660010160189054906101000a900463ffffffff1663ffffffff16955060068681548110151561307457fe5b9060005260206000209060020201945086600101601e9054906101000a900461ffff16935086600101601e9054906101000a900461ffff1661ffff1685600101601e9054906101000a900461ffff1661ffff1611156130e35784600101601e9054906101000a900461ffff1693505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d9f5aed8860000154876000015460018b60010160089054906101000a900467ffffffffffffffff16036040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018267ffffffffffffffff1681526020019350505050602060405180830381600087803b15156131b057600080fd5b5af115156131bd57600080fd5b505050604051805190509250600760008a815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915061322d898860010160189054906101000a900463ffffffff1663ffffffff166001870161ffff168686614948565b90508660010160186101000a81549063ffffffff0219169055600f60008154809291906001900391905055503373ffffffffffffffffffffffffffffffffffffffff166108fc600e549081150290604051600060405180830381858888f193505050505080975050505050505050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061334857506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806133a05750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156133ab57600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fd8c7106040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b151561343057600080fd5b5af1151561343d57600080fd5b505050600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fd8c7106040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15156134c557600080fd5b5af115156134d257600080fd5b505050565b6040805190810160405280600281526020017f434b00000000000000000000000000000000000000000000000000000000000081525081565b600381600e8110151561351f57fe5b60089182820401919006600402915054906101000a900463ffffffff1681565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1615151561358e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156135ca57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561360557600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561366257600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156136bf57600080fd5b6136c93382614227565b15156136d457600080fd5b6136df338383614355565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e5481565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561379357600080fd5b61afc86012541015156137a557600080fd5b6137b460008060008530614948565b90506137e281600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614293565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a82613829614c76565b600062015180306040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b15156138c957600080fd5b5af115156138d657600080fd5b5050506012600081548092919060010191905055505050565b60008060008311151561390157600080fd5b60068381548110151561391057fe5b90600052602060002090600202019050613a56816101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050614d6c565b915050919050565b61138881565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613abf57600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600080600080600080600060068c815481101515613b4957fe5b9060005260206000209060020201905060008160010160189054906101000a900463ffffffff1663ffffffff1614159a50438160010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff161115995080600101601c9054906101000a900461ffff1661ffff1698508060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1697508060010160189054906101000a900463ffffffff1663ffffffff1696508060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1695508060010160109054906101000a900463ffffffff1663ffffffff1694508060010160149054906101000a900463ffffffff1663ffffffff16935080600101601e9054906101000a900461ffff1661ffff16925080600001549150509193959799509193959799565b6000600260149054906101000a900460ff16151515613ca857600080fd5b613cb23383614227565b1515613cbd57600080fd5b613cc6826138ef565b1515613cd157600080fd5b613cdb8284614da6565b1515613ce657600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55d0f56846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1515613d7657600080fd5b5af11515613d8357600080fd5b505050604051805190509050600e5481013410151515613da257600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663454a2ab3600e543403856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506000604051808303818588803b1515613e3657600080fd5b5af11515613e4357600080fd5b50505050613e5d8263ffffffff168463ffffffff16614dff565b505050565b60125481565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260149054906101000a900460ff16151515613ead57600080fd5b600e543410151515613ebe57600080fd5b613ec83385614227565b1515613ed357600080fd5b613edd8385614835565b1515613ee857600080fd5b600684815481101515613ef757fe5b9060005260206000209060020201915061403d826101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050614d6c565b151561404857600080fd5b60068381548110151561405757fe5b9060005260206000209060020201905061419d816101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050614d6c565b15156141a857600080fd5b6141b482858386614620565b15156141bf57600080fd5b6141c98484614dff565b50505050565b6141d76150ea565b6141df6150ea565b600080846040518059106141f05750595b9080825280601f01601f1916602001820160405250925060208301915085905061421b828287614fc9565b82935050505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166007600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b806009600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff166009600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156144e957600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600a600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556009600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156145e857600080fd5b600260149054906101000a900460ff16151561460357600080fd5b6000600260146101000a81548160ff021916908315150217905550565b600081841415614633576000905061482d565b818560010160109054906101000a900463ffffffff1663ffffffff1614806146745750818560010160149054906101000a900463ffffffff1663ffffffff16145b15614682576000905061482d565b838360010160109054906101000a900463ffffffff1663ffffffff1614806146c35750838360010160149054906101000a900463ffffffff1663ffffffff16145b156146d1576000905061482d565b60008360010160109054906101000a900463ffffffff1663ffffffff161480614714575060008560010160109054906101000a900463ffffffff1663ffffffff16145b15614722576001905061482d565b8460010160109054906101000a900463ffffffff1663ffffffff168360010160109054906101000a900463ffffffff1663ffffffff16148061479757508460010160149054906101000a900463ffffffff1663ffffffff168360010160109054906101000a900463ffffffff1663ffffffff16145b156147a5576000905061482d565b8460010160109054906101000a900463ffffffff1663ffffffff168360010160149054906101000a900463ffffffff1663ffffffff16148061481a57508460010160149054906101000a900463ffffffff1663ffffffff168360010160149054906101000a900463ffffffff1663ffffffff16145b15614828576000905061482d565b600190505b949350505050565b60008060006007600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506007600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061493e57508173ffffffffffffffffffffffffffffffffffffffff16600a600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b9250505092915050565b60008061495361513d565b60008863ffffffff168914151561496957600080fd5b8763ffffffff168814151561497d57600080fd5b8661ffff168714151561498f57600080fd5b60028781151561499b57fe5b049250600d8361ffff1611156149b057600d92505b610100604051908101604052808781526020014267ffffffffffffffff168152602001600067ffffffffffffffff1681526020018a63ffffffff1681526020018963ffffffff168152602001600063ffffffff1681526020018461ffff1681526020018861ffff168152509150600160068054806001018281614a3391906151b1565b916000526020600020906002020160008590919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160010160106101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160010160186101000a81548163ffffffff021916908363ffffffff16021790555060c082015181600101601c6101000a81548161ffff021916908361ffff16021790555060e082015181600101601e6101000a81548161ffff021916908361ffff16021790555050500390508063ffffffff1681141515614b8557600080fd5b7f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad58582846060015163ffffffff16856080015163ffffffff168660000151604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a1614c2c60008683614355565b80935050505095945050505050565b6000808260a0015163ffffffff1614158015614c6f57504367ffffffffffffffff16826040015167ffffffffffffffff1611155b9050919050565b6000806000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eac9d94c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515614d0057600080fd5b5af11515614d0d57600080fd5b505050604051805190509150816fffffffffffffffffffffffffffffffff1682141515614d3957600080fd5b600282811515614d4557fe5b0482019050662386f26fc10000811015614d6457662386f26fc1000090505b809250505090565b6000808260a0015163ffffffff16148015614d9f57504367ffffffffffffffff16826040015167ffffffffffffffff1611155b9050919050565b6000806000600685815481101515614dba57fe5b90600052602060002090600202019150600684815481101515614dd957fe5b90600052602060002090600202019050614df582868387614620565b9250505092915050565b600080600683815481101515614e1157fe5b90600052602060002090600202019150600684815481101515614e3057fe5b90600052602060002090600202019050828160010160186101000a81548163ffffffff021916908363ffffffff160217905550614e6c82615014565b614e7581615014565b600a600085815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600a600084815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600f600081548092919060010191905055507f241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b806007600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685858460010160089054906101000a900467ffffffffffffffff16604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018267ffffffffffffffff16815260200194505050505060405180910390a150505050565b60005b602082101515614ff15782518452602084019350602083019250602082039150614fcc565b6001826020036101000a0390508019835116818551168181178652505050505050565b43600554600383600101601c9054906101000a900461ffff1661ffff16600e8110151561503d57fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1681151561506857fe5b04018160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600d81600101601c9054906101000a900461ffff1661ffff1610156150e757600181600101601c8282829054906101000a900461ffff160192506101000a81548161ffff021916908361ffff1602179055505b50565b602060405190810160405280600081525090565b6080604051908101604052806004905b600080191681526020019060019003908161510e5790505090565b602060405190810160405280600081525090565b6101006040519081016040528060008152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff168152602001600061ffff1681525090565b8154818355818115116151de576002028160020283600052602060002091820191016151dd91906151e3565b5b505050565b6152ac91905b808211156152a8576000808201600090556001820160006101000a81549067ffffffffffffffff02191690556001820160086101000a81549067ffffffffffffffff02191690556001820160106101000a81549063ffffffff02191690556001820160146101000a81549063ffffffff02191690556001820160186101000a81549063ffffffff021916905560018201601c6101000a81549061ffff021916905560018201601e6101000a81549061ffff0219169055506002016151e9565b5090565b905600a165627a7a723058208925a8da7cdfc579206e5793d2260ac2651c98c1651efa409cfe488f22c1a1bc0029",
  "sourceMap": "286:6786:9:-;;;1841:5:5;1820:26;;;;;;;;;;;;;;;;;;;;3996:395:7;;;;;;;;;4043:9;3996:395;;;;;;;;4070:9;3996:395;;;;;;;;4097:9;3996:395;;;;;;;;4124:10;3996:395;;;;;;;;4152:10;3996:395;;;;;;;;4180:7;3996:395;;;;;;;;4205:7;3996:395;;;;;;;;4230:7;3996:395;;;;;;;;4255:7;3996:395;;;;;;;;4280:8;3996:395;;;;;;;;4306:6;3996:395;;;;;;;;4330:6;3996:395;;;;;;;;4354:6;3996:395;;;;;;;;4378:6;3996:395;;;;;;;;;;;;;;;:::i;:::-;;4508:2;4475:35;;844:8:8;814:38;;3496:420:9;;;;;;;;3569:4;3560:6;;:13;;;;;;;;;;;;;;;;;;3655:10;3642;;:23;;;;;;;;;;;;;;;;;;3752:10;3739;;:23;;;;;;;;;;;;;;;;;;3863:46;3876:1;3879;3882;3893:2;3906:1;3863:12;;;;;:46;;;:::i;:::-;;286:6786;;8049:1880:7;8240:4;8824:20;8957:19;;:::i;:::-;9296;8618:9;8603:26;;8590:9;:39;8582:48;;;;;;;;8674:7;8659:24;;8648:7;:35;8640:44;;;;;;;;8732:11;8717:28;;8702:11;:43;8694:52;;;;;;;;8868:1;8854:11;:15;;;;;;;;8824:46;;8900:2;8884:13;:18;;;8880:67;;;8934:2;8918:18;;8880:67;8979:307;;;;;;;;;9006:6;8979:307;;;;9044:3;8979:307;;;;;;9080:1;8979:307;;;;;;9112:9;8979:307;;;;;;9151:7;8979:307;;;;;;9187:1;8979:307;;;;;;9217:13;8979:307;;;;;;9263:11;8979:307;;;;;8957:329;;9341:1;9318:7;:20;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;9331:6;9318:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;9296:46;;9529:11;9514:28;;9499:11;:43;9491:52;;;;;;;;9586:160;9605:6;9625:11;9658:6;:15;;;9650:24;;9696:6;:13;;;9688:22;;9724:6;:12;;;9586:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9860:33;9870:1;9873:6;9881:11;9860:9;;;;;:33;;;:::i;:::-;9911:11;9904:18;;8049:1880;;;;;;;;;;:::o;6633:758::-;6797:19;:24;6817:3;6797:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;6893:3;6863:17;:27;6881:8;6863:27;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;7013:1;6996:19;;:5;:19;;;;6992:317;;;7031:19;:26;7051:5;7031:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;7153:20;:30;7174:8;7153:30;;;;;;;;;;;;7146:37;;;;;;;;;;;7268:20;:30;7289:8;7268:30;;;;;;;;;;;;7261:37;;;;;;;;;;;6992:317;7354:30;7363:5;7370:3;7375:8;7354:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6633:758;;;:::o;286:6786:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "286:6786:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4848:11;;;;;;;;;;;4826:34;;:10;:34;;;:86;;;;4898:13;;;;;;;;;;;4876:36;;:10;:36;;;4826:86;4805:117;;;;;;;;286:6786;1635:327:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11125:346:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11125:346:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:32:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;533:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5851:400;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:55:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1296:477:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;7635:92:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5631:247;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6521:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6718:789:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1319:470:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;2609:128:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;3155;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:986:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6338:305:9;;;;;;;;;;;;;;5951:56:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8369:404:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5633:56:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3035:804:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4649:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;4234:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2882:128:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:347:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10014:139:7;;;;;;;;;;;;;;;;;;;;;;;;;;1820:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6726:344:9;;;;;;;;;;;;;;7862:192:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;254:51:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3384:33:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;714:467:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3882:122:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4378:199:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;4475:35:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3792:81:5;;;;;;;;;;;;;;8510:853:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8510:853:11;;;;;;;;;;;;;;;;;12921:1598:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5001:142:6;;;;;;;;;;;;;;584:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;584:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3996:395:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5133:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4429:998:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:38:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;679:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1319:447:10;;;;;;;;;;;;;;;;;;;;;;;;;;5261:219:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;197:51:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2062:135:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;6232:35:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5064:916:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4087:715:6;;;;;;;;;;;;;;;;;;;;;;;;;;573:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1079:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10334:1950;;;;;;;;;;;;;;;;;;;;;;;;;;1635:327:11;1706:4;781:38;;;;;;;;;;;;;;;;;;;1865:41;;;:12;:41;;;;1864:90;;;;1343:42;;;;;;;;;;;;;;;;;;;1289:35;;;;;;;;;;;;;;;;;;;1220:50;;;;;;;;;;;;;;;;;;;;;;;;1163:38;;;;;;;;;;;;;;;;;;;1107:37;;;;;;;;;;;;;;;;;;;1059:29;;;;;;;;;;;;;;;;;;;1009:31;;;;;;;;;;;;;;;;;;;964:26;;;;;;;;;;;;;;;;;;;924:21;;;;;;;;;;;;;;;;;;;886:19;;;;;;;;;;;;;;;;;;;879:67;:112;:162;:210;:266;:323;:392;:446;:507;1912:41;;;:12;:41;;;;1864:90;1856:99;;1635:327;;;:::o;1657:25:5:-;;;;;;;;;;;;;:::o;11125:346:11:-;11217:14;;:::i;:::-;11290:24;;:::i;:::-;11324:13;11277:1;11251:28;;:14;;;;;;;;;;;:28;;;;11243:37;;;;;;;;11365:14;;;;;;;;;;;:26;;;11392:8;11402:19;;11365:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11347:75;;;;;;;;11440:24;11450:6;11458:5;11440:9;:24::i;:::-;11433:31;;11125:346;;;;;;;:::o;535:32:10:-;;;;:::o;533:45:11:-;;;;;;;;;;;;;;;;;;;;:::o;5851:400::-;3473:6:5;;;;;;;;;;;3472:7;3464:16;;;;;;;;6036:27:11;6042:10;6054:8;6036:5;:27::i;:::-;6028:36;;;;;;;;6143:23;6152:8;6162:3;6143:8;:23::i;:::-;6209:35;6218:10;6230:3;6235:8;6209:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5851:400;;:::o;1626:25:5:-;;;;;;;;;;;;;:::o;348:55:10:-;394:9;348:55;:::o;1296:477:6:-;1374:36;1960:10:5;;;;;;;;;;;1946:24;;:10;:24;;;1938:33;;;;;;;;1432:8:6;1374:67;;1641:17;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1633:49;;;;;;;;1749:17;1733:13;;:33;;;;;;;;;;;;;;;;;;1296:477;;:::o;7635:92:11:-;7679:4;7719:1;7702:7;:14;;;;:18;7695:25;;7635:92;:::o;909:30:8:-;;;;:::o;5631:247::-;5714:4;5753:1;5742:8;:12;5734:21;;;;;;;;5870:1;5836:7;5844:8;5836:17;;;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:35;;;;5829:42;;5631:247;;;:::o;409:54:10:-;457:6;409:54;:::o;6521:39:7:-;;;;;;;;;;;;;:::o;6718:789:11:-;3473:6:5;;;;;;;;;;;3472:7;3464:16;;;;;;;;6962:1:11;6947:17;;:3;:17;;;;6939:26;;;;;;;;7220:4;7205:20;;:3;:20;;;;7197:29;;;;;;;;7294:34;7307:10;7319:8;7294:12;:34::i;:::-;7286:43;;;;;;;;7347:22;7353:5;7360:8;7347:5;:22::i;:::-;7339:31;;;;;;;;7469;7479:5;7486:3;7491:8;7469:9;:31::i;:::-;6718:789;;;:::o;1319:470:8:-;1395:38;1960:10:5;;;;;;;;;;;1946:24;;:10;:24;;;1938:33;;;;;;;;1457:8:8;1395:71;;1666:17;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1658:42;;;;;;;;1765:17;1751:11;;:31;;;;;;;;;;;;;;;;;;1319:470;;:::o;2609:128:5:-;1960:10;;;;;;;;;;;1946:24;;:10;:24;;;1938:33;;;;;;;;2696:1;2677:21;;:7;:21;;;;2669:30;;;;;;;;2723:7;2710:10;;:20;;;;;;;;;;;;;;;;;;2609:128;:::o;3155:::-;1960:10;;;;;;;;;;;1946:24;;:10;:24;;;1938:33;;;;;;;;3242:1;3223:21;;:7;:21;;;;3215:30;;;;;;;;3269:7;3256:10;;:20;;;;;;;;;;;;;;;;;;3155:128;:::o;1888:986:6:-;3473:6:5;;;;;;;;;;;3472:7;3464:16;;;;;;;;2268:27:6;2274:10;2286:8;2268:5;:27::i;:::-;2260:36;;;;;;;;2508:20;2519:8;2508:10;:20::i;:::-;2507:21;2499:30;;;;;;;;2539:31;2548:8;2558:11;;;;;;;;;;;2539:8;:31::i;:::-;2709:11;;;;;;;;;;;:25;;;2748:8;2770:14;2798:12;2824:9;2847:10;2709:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:986;;;;:::o;6338:305:9:-;1960:10:5;;;;;;;;;;;1946:24;;:10;:24;;;1938:33;;;;;;;;3614:6;;;;;;;;;;;3606:15;;;;;;;;6424:1:9;6401:25;;:11;;;;;;;;;;;:25;;;;6393:34;;;;;;;;6470:1;6445:27;;:13;;;;;;;;;;;:27;;;;6437:36;;;;;;;;6514:1;6491:25;;:11;;;;;;;;;;;:25;;;;6483:34;;;;;;;;6565:1;6535:32;;:18;;;;;;;;;;;:32;;;6527:41;;;;;;;;6621:15;:13;:15::i;:::-;6338:305::o;5951:56:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;8369:404:8:-;8473:4;8555:20;8606:18;8513:1;8501:9;:13;8493:22;;;;;;;;8543:1;8533:7;:11;8525:20;;;;;;;;8578:7;8586:9;8578:18;;;;;;;;;;;;;;;;;;;;8555:41;;8627:7;8635;8627:16;;;;;;;;;;;;;;;;;;;;8606:37;;8660:52;8679:6;8687:9;8698:4;8704:7;8660:18;:52::i;:::-;:106;;;;;8728:38;8747:7;8756:9;8728:18;:38::i;:::-;8660:106;8653:113;;8369:404;;;;;;:::o;5633:56:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;3035:804:6:-;3473:6:5;;;;;;;;;;;3472:7;3464:16;;;;;;;;3417:27:6;3423:10;3435:8;3417:5;:27::i;:::-;3409:36;;;;;;;;3463:24;3478:8;3463:14;:24::i;:::-;3455:33;;;;;;;;3498;3507:8;3517:13;;;;;;;;;;;3498:8;:33::i;:::-;3672:13;;;;;;;;;;;:27;;;3713:8;3735:14;3763:12;3789:9;3812:10;3672:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3035:804;;;;:::o;4649:90:8:-;2244:10:5;;;;;;;;;;;2230:24;;:10;:24;;;2222:33;;;;;;;;4729:3:8;4714:12;:18;;;;4649:90;:::o;4234:197::-;3473:6:5;;;;;;;;;;;3472:7;3464:16;;;;;;;;4350:26:8;4356:10;4368:7;4350:5;:26::i;:::-;4342:35;;;;;;;;4419:5;4387:20;:29;4408:7;4387:29;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;4234:197;;:::o;2882:128:5:-;1960:10;;;;;;;;;;;1946:24;;:10;:24;;;1938:33;;;;;;;;2969:1;2950:21;;:7;:21;;;;2942:30;;;;;;;;2996:7;2983:10;;:20;;;;;;;;;;;;;;;;;;2882:128;:::o;867:347:10:-;952:18;2244:10:5;;;;;;;;;;;2230:24;;:10;:24;;;2222:33;;;;;;;;973:6:10;952:27;;1015:1;993:24;;:10;:24;;;989:79;;;1047:10;;;;;;;;;;;1034:23;;989:79;244:4;1085:17;;:40;1077:49;;;;;;;;1137:17;;:19;;;;;;;;;;;;;1166:41;1179:1;1182;1185;1188:6;1196:10;1166:12;:41::i;:::-;;867:347;;;:::o;10014:139:7:-;2346:10:5;;;;;;;;;;;2332:24;;:10;:24;;;:64;;;;2386:10;;;;;;;;;;;2372:24;;:10;:24;;;2332:64;:104;;;;2426:10;;;;;;;;;;;2412:24;;:10;:24;;;2332:104;2311:135;;;;;;;;10101:9:7;10111:1;10101:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10094:19;;:4;:19;10086:28;;;;;;;;10142:4;10124:15;:22;;;;10014:139;:::o;1820:26:5:-;;;;;;;;;;;;;:::o;6726:344:9:-;6780:15;6902:20;2102:10:5;;;;;;;;;;;2088:24;;:10;:24;;;2080:33;;;;;;;;6798:4:9;:12;;;6780:30;;6949:12;;6944:1;6926:15;;:19;6925:36;6902:59;;6986:12;6976:7;:22;6972:92;;;7014:10;;;;;;;;;;;:15;;:39;7040:12;7030:7;:22;7014:39;;;;;;;;;;;;;;;;;;;;;;;;6972:92;6726:344;;:::o;7862:192:11:-;7944:13;7981:17;:27;7999:8;7981:27;;;;;;;;;;;;;;;;;;;;;7973:35;;8044:1;8027:19;;:5;:19;;;;8019:28;;;;;;;;7862:192;;;:::o;254:51:10:-;300:5;254:51;:::o;3384:33:9:-;;;;;;;;;;;;;:::o;714:467:6:-;790:34;1960:10:5;;;;;;;;;;;1946:24;;:10;:24;;;1938:33;;;;;;;;844:8:6;790:63;;1053:17;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1045:47;;;;;;;;1157:17;1143:11;;:31;;;;;;;;;;;;;;;;;;714:467;;:::o;3882:122:11:-;3938:13;3970:19;:27;3990:6;3970:27;;;;;;;;;;;;;;;;3963:34;;3882:122;;;:::o;4378:199:9:-;1960:10:5;;;;;;;;;;;1946:24;;:10;:24;;;1938:33;;;;;;;;3614:6;;;;;;;;;;;3606:15;;;;;;;;4523:10:9;4502:18;;:31;;;;;;;;;;;;;;;;;;4543:27;4559:10;4543:27;;;;;;;;;;;;;;;;;;;;;;4378:199;:::o;4475:35:7:-;;;;:::o;3792:81:5:-;2346:10;;;;;;;;;;;2332:24;;:10;:24;;;:64;;;;2386:10;;;;;;;;;;;2372:24;;:10;:24;;;2332:64;:104;;;;2426:10;;;;;;;;;;;2412:24;;:10;:24;;;2332:104;2311:135;;;;;;;;3473:6;;;;;;;;;;;3472:7;3464:16;;;;;;;;3862:4;3853:6;;:13;;;;;;;;;;;;;;;;;;3792:81::o;8510:853:11:-;8571:21;;:::i;:::-;8604:18;8779:23;;:::i;:::-;8844:17;8891:19;9071:13;8625:17;8635:6;8625:9;:17::i;:::-;8604:38;;8671:1;8657:10;:15;8653:704;;;8746:1;8732:16;;;;;;;;;;;;;;;;;;;;;;;;8725:23;;;;8653:704;8819:10;8805:25;;;;;;;;;;;;;;;;;;;;;;;;8779:51;;8864:13;:11;:13::i;:::-;8844:33;;8913:1;8891:23;;9112:1;9104:9;;9099:220;9124:9;9115:5;:18;;9099:220;;;9194:6;9166:34;;:17;:24;9184:5;9166:24;;;;;;;;;;;;;;;;;;;;;:34;;;9162:143;;;9246:5;9224:6;9231:11;9224:19;;;;;;;;;;;;;;;;;:27;;;;;9273:13;;;;;;;9162:143;9135:7;;;;;;;9099:220;;;9340:6;9333:13;;8510:853;;;;;;;;;:::o;12921:1598:8:-;13014:7;13091:20;13406:14;13452:18;13568:16;13774:18;13913:13;13967:16;3473:6:5;;;;;;;;;;;3472:7;3464:16;;;;;;;;13114:7:8;13122:9;13114:18;;;;;;;;;;;;;;;;;;;;13091:41;;13220:1;13200:6;:16;;;;;;;;;;;;:21;;;;13192:30;;;;;;;;13315:27;13335:6;13315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;:27::i;:::-;13307:36;;;;;;;;13423:6;:19;;;;;;;;;;;;13406:36;;;;13473:7;13481:6;13473:15;;;;;;;;;;;;;;;;;;;;13452:36;;13587:6;:17;;;;;;;;;;;;13568:36;;13636:6;:17;;;;;;;;;;;;13618:35;;:4;:15;;;;;;;;;;;;:35;;;13614:93;;;13681:4;:15;;;;;;;;;;;;13669:27;;13614:93;13795:11;;;;;;;;;;;:20;;;13816:6;:12;;;13830:4;:10;;;13868:1;13842:6;:23;;;;;;;;;;;;:27;13795:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13774:96;;13929:17;:28;13947:9;13929:28;;;;;;;;;;;;;;;;;;;;;13913:44;;13986:78;13999:9;14010:6;:19;;;;;;;;;;;;13986:78;;14043:1;14031:9;:13;13986:78;;14046:10;14058:5;13986:12;:78::i;:::-;13967:97;;14226:6;:19;;;14219:26;;;;;;;;;;;14322:15;;:17;;;;;;;;;;;;;;14419:10;:15;;:29;14435:12;;14419:29;;;;;;;;;;;;;;;;;;;;;;;;14504:8;14497:15;;12921:1598;;;;;;;;;;:::o;5001:142:6:-;2346:10:5;;;;;;;;;;;2332:24;;:10;:24;;;:64;;;;2386:10;;;;;;;;;;;2372:24;;:10;:24;;;2332:64;:104;;;;2426:10;;;;;;;;;;;2412:24;;:10;:24;;;2332:104;2311:135;;;;;;;;5066:11:6;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5105:13;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5001:142::o;584:36:11:-;;;;;;;;;;;;;;;;;;;;:::o;3996:395:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5133:53::-;;;;;;;;;;;;;;;;;;;;;;:::o;4429:998:11:-;3473:6:5;;;;;;;;;;;3472:7;3464:16;;;;;;;;4646:1:11;4631:17;;:3;:17;;;;4623:26;;;;;;;;4904:4;4889:20;;:3;:20;;;;4881:29;;;;;;;;5145:11;;;;;;;;;;;5130:27;;:3;:27;;;;5122:36;;;;;;;;5191:13;;;;;;;;;;;5176:29;;:3;:29;;;;5168:38;;;;;;;;5268:27;5274:10;5286:8;5268:5;:27::i;:::-;5260:36;;;;;;;;5384;5394:10;5406:3;5411:8;5384:9;:36::i;:::-;4429:998;;:::o;1688:25:5:-;;;;;;;;;;;;;:::o;814:38:8:-;;;;:::o;679:36:11:-;;;;;;;;;;;;;:::o;1319:447:10:-;1447:15;2244:10:5;;;;;;;;;;;2230:24;;:10;:24;;;2222:33;;;;;;;;300:5:10;1397:16;;:38;1389:47;;;;;;;;1465:44;1478:1;1481;1484;1487:6;1503:4;1465:12;:44::i;:::-;1447:62;;1519:30;1528:7;1537:11;;;;;;;;;;;1519:8;:30::i;:::-;1560:11;;;;;;;;;;;:25;;;1599:7;1620:23;:21;:23::i;:::-;1657:1;457:6;1715:4;1560:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1741:16;;:18;;;;;;;;;;;;;1319:447;;:::o;5261:219:8:-;5348:4;5399:17;5387:1;5376:8;:12;5368:21;;;;;;;;5419:7;5427:8;5419:17;;;;;;;;;;;;;;;;;;;;5399:37;;5453:20;5469:3;5453:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:20::i;:::-;5446:27;;5261:219;;;;:::o;197:51:10:-;244:4;197:51;:::o;2062:135:11:-;1960:10:5;;;;;;;;;;;1946:24;;:10;:24;;;1938:33;;;;;;;;2173:16:11;2141:14;;:49;;;;;;;;;;;;;;;;;;2062:135;:::o;6232:35:7:-;;;;;;;;;;;;;:::o;5064:916:9:-;5151:16;5177:12;5199:21;5230:20;5260;5290:17;5317:16;5343:14;5367:18;5395:13;5425:17;5445:7;5453:3;5445:12;;;;;;;;;;;;;;;;;;;;5425:32;;5560:1;5540:3;:16;;;;;;;;;;;;:21;;;;5525:37;;5607:12;5583:3;:20;;;;;;;;;;;;:36;;;;5572:48;;5654:3;:17;;;;;;;;;;;;5646:26;;5630:42;;5705:3;:20;;;;;;;;;;;;5697:29;;5682:44;;5759:3;:16;;;;;;;;;;;;5751:25;;5736:40;;5806:3;:13;;;;;;;;;;;;5798:22;;5786:34;;5849:3;:12;;;;;;;;;;;;5841:21;;5830:32;;5889:3;:10;;;;;;;;;;;;5881:19;;5872:28;;5931:3;:14;;;;;;;;;;;;5923:23;;5910:36;;5964:3;:9;;;5956:17;;5064:916;;;;;;;;;;;;:::o;4087:715:6:-;4495:20;3473:6:5;;;;;;;;;;;3472:7;3464:16;;;;;;;;4297:28:6;4303:10;4315:9;4297:5;:28::i;:::-;4289:37;;;;;;;;4344:25;4359:9;4344:14;:25::i;:::-;4336:34;;;;;;;;4388:43;4412:9;4423:7;4388:23;:43::i;:::-;4380:52;;;;;;;;4518:13;;;;;;;;;;;:29;;;4548:7;4518:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4495:61;;4602:12;;4587;:27;4574:9;:40;;4566:49;;;;;;;;4681:13;;;;;;;;;;;:17;;;4717:12;;4705:9;:24;4731:7;4681:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4749:46;4767:9;4749:46;;4786:7;4749:46;;:10;:46::i;:::-;4087:715;;;:::o;573:31:10:-;;;;:::o;1079:39:8:-;;;;;;;;;;;;;:::o;10334:1950::-;11613:20;11840:18;3473:6:5;;;;;;;;;;;3472:7;3464:16;;;;;;;;10514:12:8;;10501:9;:25;;10493:34;;;;;;;;10585:28;10591:10;10603:9;10585:5;:28::i;:::-;10577:37;;;;;;;;11511:38;11530:7;11539:9;11511:18;:38::i;:::-;11503:47;;;;;;;;11636:7;11644:9;11636:18;;;;;;;;;;;;;;;;;;;;11613:41;;11755:23;11771:6;11755:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:23::i;:::-;11747:32;;;;;;;;11861:7;11869;11861:16;;;;;;;;;;;;;;;;;;;;11840:37;;11976:21;11992:4;11976:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:21::i;:::-;11968:30;;;;;;;;12074:110;12106:6;12126:9;12149:4;12167:7;12074:18;:110::i;:::-;12066:119;;;;;;;;12247:30;12258:9;12269:7;12247:10;:30::i;:::-;10334:1950;;;;:::o;10477:403:11:-;10563:6;;:::i;:::-;10581:16;;:::i;:::-;10635:17;10662:16;10611:13;10600:25;;;;;;;;;;;;;;;;;;;;;;;;;;;10581:44;;10743:2;10729:12;10725:21;10712:34;;10771:9;10759:21;;10800:43;10808:9;10819:8;10829:13;10800:7;:43::i;:::-;10861:12;10854:19;;10477:403;;;;;;;:::o;2606:145::-;2681:4;2735:9;2704:40;;:17;:27;2722:8;2704:27;;;;;;;;;;;;;;;;;;;;;:40;;;2697:47;;2606:145;;;;:::o;3583:123::-;3690:9;3657:20;:30;3678:8;3657:30;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;3583:123;;:::o;2985:155::-;3067:4;3124:9;3090:43;;:20;:30;3111:8;3090:30;;;;;;;;;;;;;;;;;;;;;:43;;;3083:50;;2985:155;;;;:::o;6633:758:7:-;6797:19;:24;6817:3;6797:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;6893:3;6863:17;:27;6881:8;6863:27;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;7013:1;6996:19;;:5;:19;;;;6992:317;;;7031:19;:26;7051:5;7031:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;7153:20;:30;7174:8;7153:30;;;;;;;;;;;;7146:37;;;;;;;;;;;7268:20;:30;7289:8;7268:30;;;;;;;;;;;;7261:37;;;;;;;;;;;6992:317;7354:30;7363:5;7370:3;7375:8;7354:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6633:758;;;:::o;4161:126:5:-;1960:10;;;;;;;;;;;1946:24;;:10;:24;;;1938:33;;;;;;;;3614:6;;;;;;;;;;;3606:15;;;;;;;;4275:5;4266:6;;:14;;;;;;;;;;;;;;;;;;4161:126::o;6280:1181:8:-;6471:4;6552:7;6539:9;:20;6535:63;;;6582:5;6575:12;;;;6535:63;6683:7;6663;:16;;;;;;;;;;;;:27;;;:56;;;;6712:7;6694;:14;;;;;;;;;;;;:25;;;6663:56;6659:99;;;6742:5;6735:12;;;;6659:99;6789:9;6771:5;:14;;;;;;;;;;;;:27;;;:56;;;;6818:9;6802:5;:12;;;;;;;;;;;;:25;;;6771:56;6767:99;;;6850:5;6843:12;;;;6767:99;7020:1;7002:5;:14;;;;;;;;;;;;:19;;;:44;;;;7045:1;7025:7;:16;;;;;;;;;;;;:21;;;7002:44;6998:86;;;7069:4;7062:11;;;;6998:86;7175:7;:16;;;;;;;;;;;;7157:34;;:5;:14;;;;;;;;;;;;:34;;;:70;;;;7213:7;:14;;;;;;;;;;;;7195:32;;:5;:14;;;;;;;;;;;;:32;;;7157:70;7153:113;;;7250:5;7243:12;;;;7153:113;7295:7;:16;;;;;;;;;;;;7279:32;;:5;:12;;;;;;;;;;;;:32;;;:66;;;;7331:7;:14;;;;;;;;;;;;7315:30;;:5;:12;;;;;;;;;;;;:30;;;7279:66;7275:109;;;7368:5;7361:12;;;;7275:109;7450:4;7443:11;;6280:1181;;;;;;;:::o;2612:441::-;2699:4;2715:19;2775:17;2737;:28;2755:9;2737:28;;;;;;;;;;;;;;;;;;;;;2715:50;;2795:17;:26;2813:7;2795:26;;;;;;;;;;;;;;;;;;;;;2775:46;;2988:9;2973:24;;:11;:24;;;:72;;;;3034:11;3001:44;;:20;:29;3022:7;3001:29;;;;;;;;;;;;;;;;;;;;;:44;;;2973:72;2965:81;;2612:441;;;;;;:::o;8049:1880:7:-;8240:4;8824:20;8957:19;;:::i;:::-;9296;8618:9;8603:26;;8590:9;:39;8582:48;;;;;;;;8674:7;8659:24;;8648:7;:35;8640:44;;;;;;;;8732:11;8717:28;;8702:11;:43;8694:52;;;;;;;;8868:1;8854:11;:15;;;;;;;;8824:46;;8900:2;8884:13;:18;;;8880:67;;;8934:2;8918:18;;8880:67;8979:307;;;;;;;;;9006:6;8979:307;;;;9044:3;8979:307;;;;;;9080:1;8979:307;;;;;;9112:9;8979:307;;;;;;9151:7;8979:307;;;;;;9187:1;8979:307;;;;;;9217:13;8979:307;;;;;;9263:11;8979:307;;;;;8957:329;;9341:1;9318:7;:20;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;9331:6;9318:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;9296:46;;9529:11;9514:28;;9499:11;:43;9491:52;;;;;;;;9586:160;9605:6;9625:11;9658:6;:15;;;9650:24;;9696:6;:13;;;9688:22;;9724:6;:12;;;9586:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9860:33;9870:1;9873:6;9881:11;9860:9;:33::i;:::-;9911:11;9904:18;;8049:1880;;;;;;;;;;:::o;4858:177:8:-;4924:4;4972:1;4948:7;:20;;;:25;;;;4947:81;;;;;5014:12;4979:48;;:7;:24;;;:48;;;;4947:81;4940:88;;4858:177;;;:::o;1887:499:10:-;1943:7;1962:16;2147:17;1981:11;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:53;;2125:8;2109:26;;2097:8;:38;2089:47;;;;;;;;2190:1;2179:8;:12;;;;;;;;2167:8;:25;2147:45;;394:9;2264;:31;2260:93;;;394:9;2311:31;;2260:93;2370:9;2363:16;;1887:499;;;:::o;1982:397:8:-;2042:4;2319:1;2298:4;:17;;;:22;;;2297:75;;;;;2358:12;2326:45;;:4;:21;;;:45;;;;2297:75;2290:82;;1982:397;;;:::o;7638:300::-;7754:4;7774:20;7825:18;7797:7;7805:9;7797:18;;;;;;;;;;;;;;;;;;;;7774:41;;7846:7;7854;7846:16;;;;;;;;;;;;;;;;;;;;7825:37;;7879:52;7898:6;7906:9;7917:4;7923:7;7879:18;:52::i;:::-;7872:59;;7638:300;;;;;;:::o;8907:924::-;9039:18;9086:20;9060:7;9068;9060:16;;;;;;;;;;;;;;;;;;;;9039:37;;9109:7;9117:9;9109:18;;;;;;;;;;;;;;;;;;;;9086:41;;9241:7;9212:6;:19;;;:37;;;;;;;;;;;;;;;;;;9310:22;9327:4;9310:16;:22::i;:::-;9342:24;9359:6;9342:16;:24::i;:::-;9519:20;:31;9540:9;9519:31;;;;;;;;;;;;9512:38;;;;;;;;;;;9567:20;:29;9588:7;9567:29;;;;;;;;;;;;9560:36;;;;;;;;;;;9676:15;;:17;;;;;;;;;;;;;9741:83;9750:17;:28;9768:9;9750:28;;;;;;;;;;;;;;;;;;;;;9780:9;9791:7;9800:6;:23;;;;;;;;;;;;9741:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8907:924;;;;:::o;9634:565:11:-;9970:12;9758:170;9772:2;9764:4;:10;;9758:170;;;9849:4;9843:11;9836:5;9829:26;9891:2;9882:11;;;;9915:2;9907:10;;;;9784:2;9776:10;;;;9758:170;;;10006:1;9998:4;9993:2;:9;9985:3;:18;:22;9970:37;;10076:4;10072:9;10065:4;10059:11;10055:27;10129:4;10121:5;10115:12;10111:23;10174:7;10164:8;10161:21;10154:5;10147:36;10026:167;;;;;;:::o;3315:596:8:-;3568:12;3549:15;;3516:9;3526:7;:21;;;;;;;;;;;;3516:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:48;;;;;;;;;;3515:65;3481:7;:24;;;:100;;;;;;;;;;;;;;;;;;3850:2;3826:7;:21;;;;;;;;;;;;:26;;;3822:83;;;3893:1;3868:7;:21;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3822:83;3315:596;:::o;286:6786:9:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/// @title CryptoKitties: Collectible, breedable, and oh-so-adorable cats on the Ethereum blockchain.\n/// @author Axiom Zen (https://www.axiomzen.co)\n/// @dev The main CryptoKitties contract, keeps track of kittens so they don't wander around and get lost.\nimport \"./KittyMinting.sol\";\ncontract KittyCore is KittyMinting {\n\n    // This is the main CryptoKitties contract. In order to keep our code seperated into logical sections,\n    // we've broken it up in two ways. First, we have several seperately-instantiated sibling contracts\n    // that handle auctions and our super-top-secret genetic combination algorithm. The auctions are\n    // seperate since their logic is somewhat complex and there's always a risk of subtle bugs. By keeping\n    // them in their own contracts, we can upgrade them without disrupting the main contract that tracks\n    // kitty ownership. The genetic combination algorithm is kept seperate so we can open-source all of\n    // the rest of our code without making it _too_ easy for folks to figure out how the genetics work.\n    // Don't worry, I'm sure someone will reverse engineer it soon enough!\n    //\n    // Secondly, we break the core contract into multiple files using inheritence, one for each major\n    // facet of functionality of CK. This allows us to keep related code bundled together while still\n    // avoiding a single giant file with everything in it. The breakdown is as follows:\n    //\n    //      - KittyBase: This is where we define the most fundamental code shared throughout the core\n    //             functionality. This includes our main data storage, constants and data types, plus\n    //             internal functions for managing these items.\n    //\n    //      - KittyAccessControl: This contract manages the various addresses and constraints for operations\n    //             that can be executed only by specific roles. Namely CEO, CFO and COO.\n    //\n    //      - KittyOwnership: This provides the methods required for basic non-fungible token\n    //             transactions, following the draft ERC-721 spec (https://github.com/ethereum/EIPs/issues/721).\n    //\n    //      - KittyBreeding: This file contains the methods necessary to breed cats together, including\n    //             keeping track of siring offers, and relies on an external genetic combination contract.\n    //\n    //      - KittyAuctions: Here we have the public methods for auctioning or bidding on cats or siring\n    //             services. The actual auction functionality is handled in two sibling contracts (one\n    //             for sales and one for siring), while auction creation and bidding is mostly mediated\n    //             through this facet of the core contract.\n    //\n    //      - KittyMinting: This final facet contains the functionality we use for creating new gen0 cats.\n    //             We can make up to 5000 \"promo\" cats that can be given away (especially important when\n    //             the community is new), and all others can only be created and then immediately put up\n    //             for auction via an algorithmically determined starting price. Regardless of how they\n    //             are created, there is a hard limit of 50k gen0 cats. After that, it's all up to the\n    //             community to breed, breed, breed!\n\n    // Set in case the core contract is broken and an upgrade is required\n    address public newContractAddress;\n\n    /// @notice Creates the main CryptoKitties smart contract instance.\n    function KittyCore() public {\n        // Starts paused.\n        paused = true;\n\n        // the creator of the contract is the initial CEO\n        ceoAddress = msg.sender;\n\n        // the creator of the contract is also the initial COO\n        cooAddress = msg.sender;\n\n        // start with the mythical kitten 0 - so we don't have generation-0 parent issues\n        _createKitty(0, 0, 0, uint256(-1), address(0));\n    }\n\n    /// @dev Used to mark the smart contract as upgraded, in case there is a serious\n    ///  breaking bug. This method does nothing but keep track of the new contract and\n    ///  emit a message indicating that the new address is set. It's up to clients of this\n    ///  contract to update to the new contract address in that case. (This contract will\n    ///  be paused indefinitely if such an upgrade takes place.)\n    /// @param _v2Address new address\n    function setNewAddress(address _v2Address) external onlyCEO whenPaused {\n        // See README.md for updgrade plan\n        newContractAddress = _v2Address;\n        ContractUpgrade(_v2Address);\n    }\n\n    /// @notice No tipping!\n    /// @dev Reject all Ether from being sent here, unless it's from one of the\n    ///  two auction contracts. (Hopefully, we can prevent user accidents.)\n    function() external payable {\n        require(\n            msg.sender == address(saleAuction) ||\n            msg.sender == address(siringAuction)\n        );\n    }\n\n    /// @notice Returns all the relevant information about a specific kitty.\n    /// @param _id The ID of the kitty of interest.\n    function getKitty(uint256 _id)\n        external\n        view\n        returns (\n        bool isGestating,\n        bool isReady,\n        uint256 cooldownIndex,\n        uint256 nextActionAt,\n        uint256 siringWithId,\n        uint256 birthTime,\n        uint256 matronId,\n        uint256 sireId,\n        uint256 generation,\n        uint256 genes\n    ) {\n        Kitty storage kit = kitties[_id];\n\n        // if this variable is 0 then it's not gestating\n        isGestating = (kit.siringWithId != 0);\n        isReady = (kit.cooldownEndBlock <= block.number);\n        cooldownIndex = uint256(kit.cooldownIndex);\n        nextActionAt = uint256(kit.cooldownEndBlock);\n        siringWithId = uint256(kit.siringWithId);\n        birthTime = uint256(kit.birthTime);\n        matronId = uint256(kit.matronId);\n        sireId = uint256(kit.sireId);\n        generation = uint256(kit.generation);\n        genes = kit.genes;\n    }\n\n    /// @dev Override unpause so it requires all external contract addresses\n    ///  to be set before contract can be unpaused. Also, we can't have\n    ///  newContractAddress set either, because then the contract was upgraded.\n    /// @notice This is public rather than external so we can call super.unpause\n    ///  without using an expensive CALL.\n    function unpause() public onlyCEO whenPaused {\n        require(saleAuction != address(0));\n        require(siringAuction != address(0));\n        require(geneScience != address(0));\n        require(newContractAddress == address(0));\n\n        // Actually unpause the contract.\n        super.unpause();\n    }\n\n    // @dev Allows the CFO to capture the balance available to the contract.\n    function withdrawBalance() external onlyCFO {\n        uint256 balance = this.balance;\n        // Subtract all the currently pregnant kittens we have, plus 1 of margin.\n        uint256 subtractFees = (pregnantKitties + 1) * autoBirthFee;\n\n        if (balance > subtractFees) {\n            cfoAddress.send(balance - subtractFees);\n        }\n    }\n}\n",
  "sourcePath": "/Users/blake/Documents/Development/ethereum/kittiesClone/contracts/KittyCore.sol",
  "ast": {
    "absolutePath": "/Users/blake/Documents/Development/ethereum/kittiesClone/contracts/KittyCore.sol",
    "exportedSymbols": {
      "KittyCore": [
        2461
      ]
    },
    "id": 2462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/Users/blake/Documents/Development/ethereum/kittiesClone/contracts/KittyMinting.sol",
        "file": "./KittyMinting.sol",
        "id": 2206,
        "nodeType": "ImportDirective",
        "scope": 2462,
        "sourceUnit": 2614,
        "src": "257:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 2207,
              "name": "KittyMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2613,
              "src": "308:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KittyMinting_$2613",
                "typeString": "contract KittyMinting"
              }
            },
            "id": 2208,
            "nodeType": "InheritanceSpecifier",
            "src": "308:12:9"
          }
        ],
        "contractDependencies": [
          746,
          1019,
          1247,
          1559,
          2204,
          2613,
          3152
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2461,
        "linearizedBaseContracts": [
          2461,
          2613,
          1247,
          2204,
          3152,
          746,
          1559,
          1019
        ],
        "name": "KittyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2210,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 2461,
            "src": "3384:33:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2209,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3384:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2240,
              "nodeType": "Block",
              "src": "3524:392:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2213,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 863,
                      "src": "3560:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3569:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3560:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2216,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:13:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2217,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "3642:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2218,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3650,
                        "src": "3655:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3655:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3642:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2221,
                  "nodeType": "ExpressionStatement",
                  "src": "3642:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2222,
                      "name": "cooAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "3739:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2223,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3650,
                        "src": "3752:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3752:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3739:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3876:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3879:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3882:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "3893:2:9",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3894:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 2231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3885:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3885:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3906:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3898:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3898:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2227,
                      "name": "_createKitty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1538,
                      "src": "3863:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3863:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2239,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:46:9"
                }
              ]
            },
            "documentation": "@notice Creates the main CryptoKitties smart contract instance.",
            "id": 2241,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "KittyCore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3514:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3524:0:9"
            },
            "scope": 2461,
            "src": "3496:420:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2258,
              "nodeType": "Block",
              "src": "4449:128:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2250,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2210,
                      "src": "4502:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2251,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2243,
                      "src": "4523:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4502:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2253,
                  "nodeType": "ExpressionStatement",
                  "src": "4502:31:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2255,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "4559:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2254,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "4543:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4543:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2257,
                  "nodeType": "ExpressionStatement",
                  "src": "4543:27:9"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious\n  breaking bug. This method does nothing but keep track of the new contract and\n  emit a message indicating that the new address is set. It's up to clients of this\n  contract to update to the new contract address in that case. (This contract will\n  be paused indefinitely if such an upgrade takes place.)\n @param _v2Address new address",
            "id": 2259,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 2246,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2245,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 874,
                  "src": "4430:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4430:7:9"
              },
              {
                "arguments": [],
                "id": 2248,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2247,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 994,
                  "src": "4438:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4438:10:9"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2243,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2259,
                  "src": "4401:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4401:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4400:20:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4449:0:9"
            },
            "scope": 2461,
            "src": "4378:199:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2278,
              "nodeType": "Block",
              "src": "4795:134:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2263,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3650,
                              "src": "4826:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4826:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2266,
                                "name": "saleAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1361,
                                "src": "4848:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3503",
                                  "typeString": "contract SaleClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3503",
                                  "typeString": "contract SaleClockAuction"
                                }
                              ],
                              "id": 2265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4840:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4840:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4826:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2269,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3650,
                              "src": "4876:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4876:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2272,
                                "name": "siringAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1363,
                                "src": "4898:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3637",
                                  "typeString": "contract SiringClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3637",
                                  "typeString": "contract SiringClockAuction"
                                }
                              ],
                              "id": 2271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4890:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4890:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4876:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4826:86:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "4805:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4805:117:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2277,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:117:9"
                }
              ]
            },
            "documentation": "@notice No tipping!\n @dev Reject all Ether from being sent here, unless it's from one of the\n  two auction contracts. (Hopefully, we can prevent user accidents.)",
            "id": 2279,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4775:2:9"
            },
            "payable": true,
            "returnParameters": {
              "id": 2261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4795:0:9"
            },
            "scope": 2461,
            "src": "4767:162:9",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2381,
              "nodeType": "Block",
              "src": "5415:565:9",
              "statements": [
                {
                  "assignments": [
                    2305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2305,
                      "name": "kit",
                      "nodeType": "VariableDeclaration",
                      "scope": 2382,
                      "src": "5425:17:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                        "typeString": "struct KittyBase.Kitty storage pointer"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2304,
                        "name": "Kitty",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1290,
                        "src": "5425:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                          "typeString": "struct KittyBase.Kitty storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2309,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2306,
                      "name": "kitties",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "5445:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Kitty_$1290_storage_$dyn_storage",
                        "typeString": "struct KittyBase.Kitty storage ref[] storage ref"
                      }
                    },
                    "id": 2308,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2307,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2281,
                      "src": "5453:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5445:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Kitty_$1290_storage",
                      "typeString": "struct KittyBase.Kitty storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5425:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2310,
                      "name": "isGestating",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2284,
                      "src": "5525:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2311,
                              "name": "kit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "5540:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                                "typeString": "struct KittyBase.Kitty storage pointer"
                              }
                            },
                            "id": 2312,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "siringWithId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1285,
                            "src": "5540:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5560:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5540:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2315,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5539:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5525:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "5525:37:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2318,
                      "name": "isReady",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2286,
                      "src": "5572:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2319,
                              "name": "kit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "5583:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                                "typeString": "struct KittyBase.Kitty storage pointer"
                              }
                            },
                            "id": 2320,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cooldownEndBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1279,
                            "src": "5583:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2321,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3641,
                              "src": "5607:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5607:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5583:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2324,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5582:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5572:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2326,
                  "nodeType": "ExpressionStatement",
                  "src": "5572:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2327,
                      "name": "cooldownIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2288,
                      "src": "5630:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2329,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5654:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2330,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1287,
                          "src": "5654:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5646:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5646:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5630:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2333,
                  "nodeType": "ExpressionStatement",
                  "src": "5630:42:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2334,
                      "name": "nextActionAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2290,
                      "src": "5682:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2336,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5705:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2337,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownEndBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1279,
                          "src": "5705:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5697:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5697:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5682:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2340,
                  "nodeType": "ExpressionStatement",
                  "src": "5682:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2341,
                      "name": "siringWithId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2292,
                      "src": "5736:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2343,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5759:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2344,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "siringWithId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1285,
                          "src": "5759:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5751:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5751:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5736:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2347,
                  "nodeType": "ExpressionStatement",
                  "src": "5736:40:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2348,
                      "name": "birthTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2294,
                      "src": "5786:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2350,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5806:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2351,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birthTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1277,
                          "src": "5806:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5798:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5798:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5786:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2354,
                  "nodeType": "ExpressionStatement",
                  "src": "5786:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2355,
                      "name": "matronId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2296,
                      "src": "5830:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2357,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5849:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2358,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "matronId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1281,
                          "src": "5849:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5841:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5841:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5830:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2361,
                  "nodeType": "ExpressionStatement",
                  "src": "5830:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2362,
                      "name": "sireId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2298,
                      "src": "5872:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2364,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5889:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2365,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sireId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1283,
                          "src": "5889:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5881:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5881:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5872:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2368,
                  "nodeType": "ExpressionStatement",
                  "src": "5872:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2369,
                      "name": "generation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2300,
                      "src": "5910:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2371,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5931:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2372,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "generation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1289,
                          "src": "5931:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5923:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5923:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5910:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2375,
                  "nodeType": "ExpressionStatement",
                  "src": "5910:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2376,
                      "name": "genes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2302,
                      "src": "5956:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2377,
                        "name": "kit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2305,
                        "src": "5964:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                          "typeString": "struct KittyBase.Kitty storage pointer"
                        }
                      },
                      "id": 2378,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "genes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1275,
                      "src": "5964:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5956:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2380,
                  "nodeType": "ExpressionStatement",
                  "src": "5956:17:9"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific kitty.\n @param _id The ID of the kitty of interest.",
            "id": 2382,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getKitty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2281,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5082:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5082:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5081:13:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2284,
                  "name": "isGestating",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5151:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2283,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5151:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2286,
                  "name": "isReady",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5177:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2285,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5177:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2288,
                  "name": "cooldownIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5199:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5199:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2290,
                  "name": "nextActionAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5230:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5230:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2292,
                  "name": "siringWithId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5260:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5260:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2294,
                  "name": "birthTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5290:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2296,
                  "name": "matronId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5317:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5317:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2298,
                  "name": "sireId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5343:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5343:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2300,
                  "name": "generation",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5367:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5367:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2302,
                  "name": "genes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5395:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5395:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5141:273:9"
            },
            "scope": 2461,
            "src": "5064:916:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2426,
              "nodeType": "Block",
              "src": "6383:260:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2390,
                          "name": "saleAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1361,
                          "src": "6401:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SaleClockAuction_$3503",
                            "typeString": "contract SaleClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6424:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6416:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6416:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6401:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "6393:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6393:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2396,
                  "nodeType": "ExpressionStatement",
                  "src": "6393:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2398,
                          "name": "siringAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1363,
                          "src": "6445:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SiringClockAuction_$3637",
                            "typeString": "contract SiringClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6470:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6462:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6462:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6445:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "6437:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6437:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2404,
                  "nodeType": "ExpressionStatement",
                  "src": "6437:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2406,
                          "name": "geneScience",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1581,
                          "src": "6491:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeneScienceInterface_$849",
                            "typeString": "contract GeneScienceInterface"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6514:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6506:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6506:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6491:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "6483:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6483:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2412,
                  "nodeType": "ExpressionStatement",
                  "src": "6483:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2414,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2210,
                          "src": "6535:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6565:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6557:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6557:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6535:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "6527:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6527:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2420,
                  "nodeType": "ExpressionStatement",
                  "src": "6527:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2421,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3692,
                        "src": "6621:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_KittyCore_$2461",
                          "typeString": "contract super KittyCore"
                        }
                      },
                      "id": 2423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1018,
                      "src": "6621:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6621:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2425,
                  "nodeType": "ExpressionStatement",
                  "src": "6621:15:9"
                }
              ]
            },
            "documentation": "@dev Override unpause so it requires all external contract addresses\n  to be set before contract can be unpaused. Also, we can't have\n  newContractAddress set either, because then the contract was upgraded.\n @notice This is public rather than external so we can call super.unpause\n  without using an expensive CALL.",
            "id": 2427,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 2385,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2384,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 874,
                  "src": "6364:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6364:7:9"
              },
              {
                "arguments": [],
                "id": 2387,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2386,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 994,
                  "src": "6372:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6372:10:9"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6354:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6383:0:9"
            },
            "scope": 2461,
            "src": "6338:305:9",
            "stateMutability": "nonpayable",
            "superFunction": 1018,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2459,
              "nodeType": "Block",
              "src": "6770:300:9",
              "statements": [
                {
                  "assignments": [
                    2433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2433,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2460,
                      "src": "6780:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6780:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2436,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2434,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3691,
                      "src": "6798:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KittyCore_$2461",
                        "typeString": "contract KittyCore"
                      }
                    },
                    "id": 2435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6798:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6780:30:9"
                },
                {
                  "assignments": [
                    2438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2438,
                      "name": "subtractFees",
                      "nodeType": "VariableDeclaration",
                      "scope": 2460,
                      "src": "6902:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2437,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6902:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2445,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2439,
                            "name": "pregnantKitties",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1579,
                            "src": "6926:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6944:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6926:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2442,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6925:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2443,
                      "name": "autoBirthFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1577,
                      "src": "6949:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6925:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6902:59:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2446,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2433,
                      "src": "6976:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2447,
                      "name": "subtractFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2438,
                      "src": "6986:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6976:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2458,
                  "nodeType": "IfStatement",
                  "src": "6972:92:9",
                  "trueBody": {
                    "id": 2457,
                    "nodeType": "Block",
                    "src": "7000:64:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2452,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2433,
                                "src": "7030:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2453,
                                "name": "subtractFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2438,
                                "src": "7040:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7030:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2449,
                              "name": "cfoAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 858,
                              "src": "7014:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "send",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7014:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) returns (bool)"
                            }
                          },
                          "id": 2455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7014:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2456,
                        "nodeType": "ExpressionStatement",
                        "src": "7014:39:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2460,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 2430,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2429,
                  "name": "onlyCFO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 885,
                  "src": "6762:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6762:7:9"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6750:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6770:0:9"
            },
            "scope": 2461,
            "src": "6726:344:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2462,
        "src": "286:6786:9"
      }
    ],
    "src": "257:6816:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/blake/Documents/Development/ethereum/kittiesClone/contracts/KittyCore.sol",
    "exportedSymbols": {
      "KittyCore": [
        2461
      ]
    },
    "id": 2462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/Users/blake/Documents/Development/ethereum/kittiesClone/contracts/KittyMinting.sol",
        "file": "./KittyMinting.sol",
        "id": 2206,
        "nodeType": "ImportDirective",
        "scope": 2462,
        "sourceUnit": 2614,
        "src": "257:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 2207,
              "name": "KittyMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2613,
              "src": "308:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KittyMinting_$2613",
                "typeString": "contract KittyMinting"
              }
            },
            "id": 2208,
            "nodeType": "InheritanceSpecifier",
            "src": "308:12:9"
          }
        ],
        "contractDependencies": [
          746,
          1019,
          1247,
          1559,
          2204,
          2613,
          3152
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2461,
        "linearizedBaseContracts": [
          2461,
          2613,
          1247,
          2204,
          3152,
          746,
          1559,
          1019
        ],
        "name": "KittyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2210,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 2461,
            "src": "3384:33:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2209,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3384:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2240,
              "nodeType": "Block",
              "src": "3524:392:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2213,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 863,
                      "src": "3560:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3569:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3560:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2216,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:13:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2217,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "3642:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2218,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3650,
                        "src": "3655:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3655:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3642:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2221,
                  "nodeType": "ExpressionStatement",
                  "src": "3642:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2222,
                      "name": "cooAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "3739:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2223,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3650,
                        "src": "3752:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3752:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3739:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3876:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3879:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3882:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "3893:2:9",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3894:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 2231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3885:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3885:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3906:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3898:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3898:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2227,
                      "name": "_createKitty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1538,
                      "src": "3863:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3863:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2239,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:46:9"
                }
              ]
            },
            "documentation": "@notice Creates the main CryptoKitties smart contract instance.",
            "id": 2241,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "KittyCore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3514:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3524:0:9"
            },
            "scope": 2461,
            "src": "3496:420:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2258,
              "nodeType": "Block",
              "src": "4449:128:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2250,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2210,
                      "src": "4502:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2251,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2243,
                      "src": "4523:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4502:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2253,
                  "nodeType": "ExpressionStatement",
                  "src": "4502:31:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2255,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "4559:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2254,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "4543:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4543:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2257,
                  "nodeType": "ExpressionStatement",
                  "src": "4543:27:9"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious\n  breaking bug. This method does nothing but keep track of the new contract and\n  emit a message indicating that the new address is set. It's up to clients of this\n  contract to update to the new contract address in that case. (This contract will\n  be paused indefinitely if such an upgrade takes place.)\n @param _v2Address new address",
            "id": 2259,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 2246,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2245,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 874,
                  "src": "4430:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4430:7:9"
              },
              {
                "arguments": [],
                "id": 2248,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2247,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 994,
                  "src": "4438:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4438:10:9"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2243,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2259,
                  "src": "4401:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4401:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4400:20:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4449:0:9"
            },
            "scope": 2461,
            "src": "4378:199:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2278,
              "nodeType": "Block",
              "src": "4795:134:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2263,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3650,
                              "src": "4826:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4826:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2266,
                                "name": "saleAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1361,
                                "src": "4848:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3503",
                                  "typeString": "contract SaleClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3503",
                                  "typeString": "contract SaleClockAuction"
                                }
                              ],
                              "id": 2265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4840:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4840:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4826:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2269,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3650,
                              "src": "4876:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4876:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2272,
                                "name": "siringAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1363,
                                "src": "4898:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3637",
                                  "typeString": "contract SiringClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3637",
                                  "typeString": "contract SiringClockAuction"
                                }
                              ],
                              "id": 2271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4890:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4890:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4876:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4826:86:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "4805:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4805:117:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2277,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:117:9"
                }
              ]
            },
            "documentation": "@notice No tipping!\n @dev Reject all Ether from being sent here, unless it's from one of the\n  two auction contracts. (Hopefully, we can prevent user accidents.)",
            "id": 2279,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4775:2:9"
            },
            "payable": true,
            "returnParameters": {
              "id": 2261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4795:0:9"
            },
            "scope": 2461,
            "src": "4767:162:9",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2381,
              "nodeType": "Block",
              "src": "5415:565:9",
              "statements": [
                {
                  "assignments": [
                    2305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2305,
                      "name": "kit",
                      "nodeType": "VariableDeclaration",
                      "scope": 2382,
                      "src": "5425:17:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                        "typeString": "struct KittyBase.Kitty storage pointer"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2304,
                        "name": "Kitty",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1290,
                        "src": "5425:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                          "typeString": "struct KittyBase.Kitty storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2309,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2306,
                      "name": "kitties",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "5445:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Kitty_$1290_storage_$dyn_storage",
                        "typeString": "struct KittyBase.Kitty storage ref[] storage ref"
                      }
                    },
                    "id": 2308,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2307,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2281,
                      "src": "5453:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5445:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Kitty_$1290_storage",
                      "typeString": "struct KittyBase.Kitty storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5425:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2310,
                      "name": "isGestating",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2284,
                      "src": "5525:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2311,
                              "name": "kit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "5540:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                                "typeString": "struct KittyBase.Kitty storage pointer"
                              }
                            },
                            "id": 2312,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "siringWithId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1285,
                            "src": "5540:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5560:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5540:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2315,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5539:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5525:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "5525:37:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2318,
                      "name": "isReady",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2286,
                      "src": "5572:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2319,
                              "name": "kit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "5583:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                                "typeString": "struct KittyBase.Kitty storage pointer"
                              }
                            },
                            "id": 2320,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cooldownEndBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1279,
                            "src": "5583:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2321,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3641,
                              "src": "5607:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5607:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5583:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2324,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5582:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5572:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2326,
                  "nodeType": "ExpressionStatement",
                  "src": "5572:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2327,
                      "name": "cooldownIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2288,
                      "src": "5630:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2329,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5654:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2330,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1287,
                          "src": "5654:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5646:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5646:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5630:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2333,
                  "nodeType": "ExpressionStatement",
                  "src": "5630:42:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2334,
                      "name": "nextActionAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2290,
                      "src": "5682:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2336,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5705:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2337,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownEndBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1279,
                          "src": "5705:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5697:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5697:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5682:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2340,
                  "nodeType": "ExpressionStatement",
                  "src": "5682:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2341,
                      "name": "siringWithId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2292,
                      "src": "5736:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2343,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5759:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2344,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "siringWithId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1285,
                          "src": "5759:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5751:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5751:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5736:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2347,
                  "nodeType": "ExpressionStatement",
                  "src": "5736:40:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2348,
                      "name": "birthTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2294,
                      "src": "5786:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2350,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5806:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2351,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birthTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1277,
                          "src": "5806:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5798:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5798:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5786:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2354,
                  "nodeType": "ExpressionStatement",
                  "src": "5786:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2355,
                      "name": "matronId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2296,
                      "src": "5830:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2357,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5849:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2358,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "matronId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1281,
                          "src": "5849:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5841:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5841:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5830:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2361,
                  "nodeType": "ExpressionStatement",
                  "src": "5830:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2362,
                      "name": "sireId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2298,
                      "src": "5872:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2364,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5889:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2365,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sireId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1283,
                          "src": "5889:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5881:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5881:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5872:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2368,
                  "nodeType": "ExpressionStatement",
                  "src": "5872:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2369,
                      "name": "generation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2300,
                      "src": "5910:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2371,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "5931:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2372,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "generation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1289,
                          "src": "5931:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5923:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5923:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5910:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2375,
                  "nodeType": "ExpressionStatement",
                  "src": "5910:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2376,
                      "name": "genes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2302,
                      "src": "5956:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2377,
                        "name": "kit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2305,
                        "src": "5964:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Kitty_$1290_storage_ptr",
                          "typeString": "struct KittyBase.Kitty storage pointer"
                        }
                      },
                      "id": 2378,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "genes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1275,
                      "src": "5964:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5956:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2380,
                  "nodeType": "ExpressionStatement",
                  "src": "5956:17:9"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific kitty.\n @param _id The ID of the kitty of interest.",
            "id": 2382,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getKitty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2281,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5082:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5082:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5081:13:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2284,
                  "name": "isGestating",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5151:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2283,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5151:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2286,
                  "name": "isReady",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5177:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2285,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5177:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2288,
                  "name": "cooldownIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5199:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5199:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2290,
                  "name": "nextActionAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5230:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5230:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2292,
                  "name": "siringWithId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5260:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5260:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2294,
                  "name": "birthTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5290:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2296,
                  "name": "matronId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5317:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5317:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2298,
                  "name": "sireId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5343:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5343:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2300,
                  "name": "generation",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5367:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5367:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2302,
                  "name": "genes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "5395:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5395:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5141:273:9"
            },
            "scope": 2461,
            "src": "5064:916:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2426,
              "nodeType": "Block",
              "src": "6383:260:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2390,
                          "name": "saleAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1361,
                          "src": "6401:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SaleClockAuction_$3503",
                            "typeString": "contract SaleClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6424:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6416:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6416:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6401:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "6393:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6393:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2396,
                  "nodeType": "ExpressionStatement",
                  "src": "6393:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2398,
                          "name": "siringAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1363,
                          "src": "6445:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SiringClockAuction_$3637",
                            "typeString": "contract SiringClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6470:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6462:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6462:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6445:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "6437:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6437:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2404,
                  "nodeType": "ExpressionStatement",
                  "src": "6437:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2406,
                          "name": "geneScience",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1581,
                          "src": "6491:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeneScienceInterface_$849",
                            "typeString": "contract GeneScienceInterface"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6514:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6506:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6506:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6491:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "6483:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6483:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2412,
                  "nodeType": "ExpressionStatement",
                  "src": "6483:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2414,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2210,
                          "src": "6535:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6565:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6557:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6557:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6535:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "6527:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6527:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2420,
                  "nodeType": "ExpressionStatement",
                  "src": "6527:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2421,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3692,
                        "src": "6621:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_KittyCore_$2461",
                          "typeString": "contract super KittyCore"
                        }
                      },
                      "id": 2423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1018,
                      "src": "6621:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6621:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2425,
                  "nodeType": "ExpressionStatement",
                  "src": "6621:15:9"
                }
              ]
            },
            "documentation": "@dev Override unpause so it requires all external contract addresses\n  to be set before contract can be unpaused. Also, we can't have\n  newContractAddress set either, because then the contract was upgraded.\n @notice This is public rather than external so we can call super.unpause\n  without using an expensive CALL.",
            "id": 2427,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 2385,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2384,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 874,
                  "src": "6364:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6364:7:9"
              },
              {
                "arguments": [],
                "id": 2387,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2386,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 994,
                  "src": "6372:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6372:10:9"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6354:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6383:0:9"
            },
            "scope": 2461,
            "src": "6338:305:9",
            "stateMutability": "nonpayable",
            "superFunction": 1018,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2459,
              "nodeType": "Block",
              "src": "6770:300:9",
              "statements": [
                {
                  "assignments": [
                    2433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2433,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2460,
                      "src": "6780:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6780:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2436,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2434,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3691,
                      "src": "6798:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KittyCore_$2461",
                        "typeString": "contract KittyCore"
                      }
                    },
                    "id": 2435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6798:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6780:30:9"
                },
                {
                  "assignments": [
                    2438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2438,
                      "name": "subtractFees",
                      "nodeType": "VariableDeclaration",
                      "scope": 2460,
                      "src": "6902:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2437,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6902:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2445,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2439,
                            "name": "pregnantKitties",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1579,
                            "src": "6926:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6944:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6926:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2442,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6925:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2443,
                      "name": "autoBirthFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1577,
                      "src": "6949:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6925:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6902:59:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2446,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2433,
                      "src": "6976:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2447,
                      "name": "subtractFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2438,
                      "src": "6986:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6976:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2458,
                  "nodeType": "IfStatement",
                  "src": "6972:92:9",
                  "trueBody": {
                    "id": 2457,
                    "nodeType": "Block",
                    "src": "7000:64:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2452,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2433,
                                "src": "7030:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2453,
                                "name": "subtractFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2438,
                                "src": "7040:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7030:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2449,
                              "name": "cfoAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 858,
                              "src": "7014:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "send",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7014:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) returns (bool)"
                            }
                          },
                          "id": 2455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7014:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2456,
                        "nodeType": "ExpressionStatement",
                        "src": "7014:39:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2460,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 2430,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2429,
                  "name": "onlyCFO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 885,
                  "src": "6762:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6762:7:9"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6750:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6770:0:9"
            },
            "scope": 2461,
            "src": "6726:344:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2462,
        "src": "286:6786:9"
      }
    ],
    "src": "257:6816:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-07T16:34:57.218Z"
}